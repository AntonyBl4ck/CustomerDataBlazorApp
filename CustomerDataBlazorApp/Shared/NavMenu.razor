@using CustomerDataBlazorApp.Models
@using CustomerDataBlazorApp.Services
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject UserSessionService UserSessionService

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid d-flex align-items-center">
        <a class="navbar-brand" href="/">CustomerDataApi</a>

        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" style="color: white; text-decoration: none;">Home</NavLink>
                </li>

                @if (string.IsNullOrEmpty(UserSessionService.Email))
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/register" style="color: white; text-decoration: none;">Register</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/login" style="color: white; text-decoration: none;">Login</NavLink>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <span class="nav-link" style="color: white; cursor: default;">@UserSessionService.FirstName</span>
                    </li>
                    <li class="nav-item">
                        <button @onclick="Logout" class="nav-link btn btn-link" style="color: white;">Logout</button>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    protected override void OnInitialized()
    {
        UserSessionService.OnChange += StateHasChanged; 
    }

    private void OnDispose()
    {
        UserSessionService.OnChange -= StateHasChanged;
    }

    private async Task Logout()
    {
        UserSessionService.ClearUserSession();
        await JSRuntime.InvokeVoidAsync("localStorageHelper.removeItem", "UserEmail");
        await JSRuntime.InvokeVoidAsync("localStorageHelper.removeItem", "UserFirstName");

        NavigationManager.NavigateTo("/"); 
        await JSRuntime.InvokeVoidAsync("eval", "location.reload();");
    }

    public void Dispose()
    {
        OnDispose(); 
    }
}
